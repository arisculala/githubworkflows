name: Publish and Deploy Prod

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        ref: main  # Ensures the 'main' branch is checked out

    - name: Set up Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: true
        #region: ap-southeast-3  # You have the region set here

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.event.release.tag_name }} .
        docker tag ${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.event.release.tag_name }} ${{ secrets.ACCOUNT_ID }}.dkr.ecr.ap-southeast-3.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.event.release.tag_name }}
        docker push ${{ secrets.ACCOUNT_ID }}.dkr.ecr.ap-southeast-3.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.event.release.tag_name }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    #- name: Deploy to EC2
    #  run: |
    #    ssh -o StrictHostKeyChecking=no ec2-user@<ec2-public-ip> 'docker pull ${{ secrets.ACCOUNT_ID }}.dkr.ecr.ap-southeast-3.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.event.release.tag_name }} && docker run -d -p 80:80 ${{ secrets.ACCOUNT_ID }}.dkr.ecr.ap-southeast-3.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.event.release.tag_name }}'
    #  env:
    #    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
